# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on: [pull_request, push]

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [ 16, 17 ]
        # and run on both Linux and Windows
        os: [ubuntu-20.04, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Generate versions
        uses: HardNorth/github-version-generate@v1.1.1
        with:
            version-source: file
            version-file: gradle.properties
            version-file-extraction-pattern: '(?<=minecraft_version=).+'
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: Version Numbers
        run: echo "${{ env.CURRENT_VERSION }}"
      - name: Branch Name
        run: echo "${{ github.head_ref }}"
      - name: Create package name
        if: ${{ runner.os == 'Linux' && matrix.java == '17' && github.event_name == 'pull_request' }}
        run: echo "package_name=FabricMiningGadgets-$CURRENT_VERSION-${{ github.head_ref || 'main' }}-SNAPSHOT-$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' && github.event_name == 'pull_request' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.package_name }}
          path: build/libs/
